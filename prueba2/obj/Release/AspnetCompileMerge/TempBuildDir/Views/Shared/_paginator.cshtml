
@model rhcon.Models.ViewModel.PaginacionViewModel
@{
    var cantidadPaginas = (int)Math.Ceiling((double)Model.TotaldeRegistros / Model.RegistrosPorPagina);
}

<style>
    .pagination {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-flow: wrap row;
        margin-top: 40px;
    }

        .pagination li {
            background-color: white;
            padding: 4px 10px;
            border: 1px solid #dedede;
        }

            .pagination li a {
                text-decoration: none;
                color: black;
            }

        .pagination .active {
            background-color: #e8aa35;
        }

            .pagination .active a {
                color: white;
            }
</style>

<ul class="pagination">
    @*formato 1*@
    @*@if (Model.PaginaActual == 1)
        {
            <li class="disabled">@Html.ActionLink("Anterior", null, new { pagina = 1 })</li>
        }
        else
        {
            <li>@Html.ActionLink("Anterior",null,new { pagina = Model.PaginaActual - 1}) </li>
        }
        @if(Model.PaginaActual == cantidadPaginas)
         {
            <li class="disabled">@Html.ActionLink("Siguiente",null,new { pagina = cantidadPaginas })</li>
         }
         else
         {
            <li>@Html.ActionLink("Siguiente", null, new { pagina = Model.PaginaActual + 1})</li>
         }*@

    @{
        int Inicial = 1;
        int radio = 3;
        var cantidadMaximaDePaginas = radio * 2 + 1;
        int Final = (cantidadPaginas > cantidadMaximaDePaginas) ? cantidadMaximaDePaginas : cantidadPaginas;
        if (Model.PaginaActual > radio + 1)
        {
            Inicial = Model.PaginaActual - radio;
            if (cantidadPaginas > Model.PaginaActual + radio)
            {
                Final = Model.PaginaActual + radio;
            }
            else
            {
                Final = cantidadPaginas;
            }
        }
    }


    @if (Model.TotaldeRegistros != 0)
    {
        <li>@Html.ActionLink("Primera", null, new { pagina = 1 })</li>
        for (int i = Inicial; i <= Final; i++)
        {
            if (i == Model.PaginaActual)
            {
                <li class="active">@Html.ActionLink(i.ToString(), null, new { pagina = i })</li>
            }
            else
            {
                <li>@Html.ActionLink(i.ToString(), null, new { pagina = i })</li>
            }

        }
        <li>@Html.ActionLink("Última", null, new { pagina = cantidadPaginas })</li>
    }
    else
    {
        <h3>Sin registros</h3>
    }
</ul>


